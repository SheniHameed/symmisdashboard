{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SymColud\\\\Desktop\\\\Proj\\\\symmisdashboard\\\\src\\\\components\\\\ProtectedRoutes.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Navigate, Outlet } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useAuth = () => {\n  //get item from localstorage\n  let user;\n\n  const _user = localStorage.getItem(\"user\");\n\n  if (_user) {\n    user = JSON.parse(_user);\n    console.log(\"user\", user);\n  }\n\n  if (user) {\n    return {\n      auth: true,\n      role: user.role\n    };\n  } else {\n    return {\n      auth: false,\n      role: null\n    };\n  }\n}; //protected Route state\n\n\nconst ProtectedRoutes = props => {\n  _s();\n\n  const {\n    auth,\n    role\n  } = useAuth(); //if the role required is there or not\n\n  if (props.roleRequired) {\n    return auth ? props.roleRequired === role ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/denied\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this);\n  } else {\n    return auth ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 30\n    }, this);\n  }\n};\n\n_s(ProtectedRoutes, \"YghbvoNYVxBxVP2XFCiv0s9ErXo=\", false, function () {\n  return [useAuth];\n});\n\n_c = ProtectedRoutes;\nexport default ProtectedRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoutes\");","map":{"version":3,"sources":["C:/Users/SymColud/Desktop/Proj/symmisdashboard/src/components/ProtectedRoutes.tsx"],"names":["React","Navigate","Outlet","useAuth","user","_user","localStorage","getItem","JSON","parse","console","log","auth","role","ProtectedRoutes","props","roleRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,QAAR,EAAkBC,MAAlB,QAA+B,kBAA/B;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACrB;AAEA,MAAIC,IAAJ;;AAEA,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAd;;AAEA,MAAIF,KAAJ,EAAW;AACVD,IAAAA,IAAI,GAAGI,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAP;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBP,IAApB;AACA;;AACD,MAAIA,IAAJ,EAAU;AACT,WAAO;AACNQ,MAAAA,IAAI,EAAE,IADA;AAENC,MAAAA,IAAI,EAAET,IAAI,CAACS;AAFL,KAAP;AAIA,GALD,MAKO;AACN,WAAO;AACND,MAAAA,IAAI,EAAE,KADA;AAENC,MAAAA,IAAI,EAAE;AAFA,KAAP;AAIA;AACD,CAtBD,C,CAwBA;;;AAKA,MAAMC,eAAe,GAAIC,KAAD,IAA+B;AAAA;;AACtD,QAAM;AAACH,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAeV,OAAO,EAA5B,CADsD,CAGtD;;AACA,MAAIY,KAAK,CAACC,YAAV,EAAwB;AACvB,WAAOJ,IAAI,GACVG,KAAK,CAACC,YAAN,KAAuBH,IAAvB,gBACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAJS,gBAOV,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAPD;AASA,GAVD,MAUO;AACN,WAAOD,IAAI,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAgB,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAA3B;AACA;AACD,CAjBD;;GAAME,e;UACgBX,O;;;KADhBW,e;AAmBN,eAAeA,eAAf","sourcesContent":["import React from \"react\"\r\n\r\nimport {Navigate, Outlet} from \"react-router-dom\"\r\n\r\nconst useAuth = () => {\r\n\t//get item from localstorage\r\n\r\n\tlet user: any\r\n\r\n\tconst _user = localStorage.getItem(\"user\")\r\n\r\n\tif (_user) {\r\n\t\tuser = JSON.parse(_user)\r\n\t\tconsole.log(\"user\", user)\r\n\t}\r\n\tif (user) {\r\n\t\treturn {\r\n\t\t\tauth: true,\r\n\t\t\trole: user.role,\r\n\t\t}\r\n\t} else {\r\n\t\treturn {\r\n\t\t\tauth: false,\r\n\t\t\trole: null,\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//protected Route state\r\ntype ProtectedRouteType = {\r\n\troleRequired?: \"ADMIN\" | \"USER\"\r\n}\r\n\r\nconst ProtectedRoutes = (props: ProtectedRouteType) => {\r\n\tconst {auth, role} = useAuth()\r\n\r\n\t//if the role required is there or not\r\n\tif (props.roleRequired) {\r\n\t\treturn auth ? (\r\n\t\t\tprops.roleRequired === role ? (\r\n\t\t\t\t<Outlet />\r\n\t\t\t) : (\r\n\t\t\t\t<Navigate to=\"/denied\" />\r\n\t\t\t)\r\n\t\t) : (\r\n\t\t\t<Navigate to=\"/login\" />\r\n\t\t)\r\n\t} else {\r\n\t\treturn auth ? <Outlet /> : <Navigate to=\"/login\" />\r\n\t}\r\n}\r\n\r\nexport default ProtectedRoutes\r\n"]},"metadata":{},"sourceType":"module"}