{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SymColud\\\\Desktop\\\\Proj\\\\symmisdashboard\\\\src\\\\App.tsx\";\nimport React from 'react';\nimport MainRoutes from './Routes';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(MainRoutes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n/* When the user clicks on the button,\r\ntoggle between hiding and showing the dropdown content */\n\n\n_c = App;\n\nfunction myFunction() {\n  document.getElementById(\"myDropdown\").classList.toggle(\"show\");\n} // Close the dropdown menu if the user clicks outside of it\n\n\nwindow.onclick = function (event) {\n  if (!event.target.matches('.dropbtn')) {\n    var dropdowns = document.getElementsByClassName(\"dropdown-content\");\n    var i;\n\n    for (i = 0; i < dropdowns.length; i++) {\n      var openDropdown = dropdowns[i];\n\n      if (openDropdown.classList.contains('show')) {\n        openDropdown.classList.remove('show');\n      }\n    }\n  }\n};\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/SymColud/Desktop/Proj/symmisdashboard/src/App.tsx"],"names":["React","MainRoutes","App","myFunction","document","getElementById","classList","toggle","window","onclick","event","target","matches","dropdowns","getElementsByClassName","i","length","openDropdown","contains","remove"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,UAAvB;AAIA,OAAO,cAAP;;;AAEA,SAASC,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BAKA,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;AACD;AACA;;;KAZSA,G;;AAaT,SAASC,UAAT,GAAsB;AACpBC,EAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,SAAtC,CAAgDC,MAAhD,CAAuD,MAAvD;AACD,C,CAED;;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAASC,KAAT,EAAgB;AAC/B,MAAI,CAACA,KAAK,CAACC,MAAN,CAAaC,OAAb,CAAqB,UAArB,CAAL,EAAuC;AACrC,QAAIC,SAAS,GAAGT,QAAQ,CAACU,sBAAT,CAAgC,kBAAhC,CAAhB;AACA,QAAIC,CAAJ;;AACA,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,SAAS,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAIE,YAAY,GAAGJ,SAAS,CAACE,CAAD,CAA5B;;AACA,UAAIE,YAAY,CAACX,SAAb,CAAuBY,QAAvB,CAAgC,MAAhC,CAAJ,EAA6C;AAC3CD,QAAAA,YAAY,CAACX,SAAb,CAAuBa,MAAvB,CAA8B,MAA9B;AACD;AACF;AACF;AACF,CAXD;;AAYA,eAAejB,GAAf","sourcesContent":["import React from 'react';\r\n\r\nimport MainRoutes from './Routes'\r\nimport Sidebar from './components/Sidebar'\r\n\r\n\r\nimport './styles.css'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n     \r\n     {/** Sidebar */}\r\n    \r\n     {/** Inner container */}\r\n    <MainRoutes/>\r\n    </div>\r\n  );\r\n}\r\n/* When the user clicks on the button,\r\ntoggle between hiding and showing the dropdown content */\r\nfunction myFunction() {\r\n  document.getElementById(\"myDropdown\").classList.toggle(\"show\");\r\n}\r\n\r\n// Close the dropdown menu if the user clicks outside of it\r\nwindow.onclick = function(event) {\r\n  if (!event.target.matches('.dropbtn')) {\r\n    var dropdowns = document.getElementsByClassName(\"dropdown-content\");\r\n    var i;\r\n    for (i = 0; i < dropdowns.length; i++) {\r\n      var openDropdown = dropdowns[i];\r\n      if (openDropdown.classList.contains('show')) {\r\n        openDropdown.classList.remove('show');\r\n      }\r\n    }\r\n  }\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}