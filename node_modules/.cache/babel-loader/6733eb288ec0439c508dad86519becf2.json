{"ast":null,"code":"var _jsxFileName = \"D:\\\\Zain\\\\xd\\\\symmisdashboard\\\\src\\\\components\\\\DynamicForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DynamicForm = () => {\n  _s();\n\n  const [inviteMembers, setInviteMembers] = React.useState([{\n    name: \"\",\n    email: \"\",\n    id: uuidv4()\n  }]);\n  const [teamsMembers, setTeamMembers] = React.useState([{\n    teamName: \"\",\n    id: uuidv4(),\n    members: [{\n      name: \"\",\n      email: \"\",\n      id: uuidv4()\n    }]\n  }]); //add new form field for adding member\n\n  const addMemberRow = () => {\n    //Todo generate random id\n    let _inviteMembers = [...inviteMembers];\n\n    _inviteMembers.push({\n      name: \"\",\n      email: \"\",\n      id: uuidv4()\n    });\n\n    setInviteMembers(_inviteMembers);\n  }; //remove form field for adding member\n\n\n  const removeMemberRow = id => {\n    //Todo generate random id\n    let _inviteMembers = [...inviteMembers];\n    _inviteMembers = _inviteMembers.filter(member => member.id !== id);\n    setInviteMembers(_inviteMembers);\n  }; //handle email row change\n\n\n  const handleMemberChange = (id, event) => {\n    //find the index to be changed\n    const index = inviteMembers.findIndex(m => m.id === id);\n    let _inviteMembers = [...inviteMembers];\n    _inviteMembers[index][event.target.name] = event.target.value;\n    setInviteMembers(_inviteMembers);\n  }; //handle invitation for members\n\n\n  const handleInvitation = () => {\n    console.table(inviteMembers);\n  }; //handle add team\n\n\n  const handleAddTeam = () => {\n    let _teamsMembers = [...teamsMembers];\n\n    _teamsMembers.push({\n      teamName: \"\",\n      id: uuidv4(),\n      members: [{\n        name: \"\",\n        email: \"\",\n        id: uuidv4()\n      }]\n    });\n\n    setTeamMembers(_teamsMembers);\n  }; //handle new memeber inside selected team\n\n\n  const addNewMemberInTeam = id => {\n    const index = teamsMembers.findIndex(team => team.id === id);\n    let _teamsMembers = [...teamsMembers];\n\n    _teamsMembers[index].members.push({\n      name: \"\",\n      email: \"\",\n      id: uuidv4()\n    });\n\n    setTeamMembers(_teamsMembers);\n  }; //handle team data\n\n\n  const handleTeamData = (id, event) => {\n    const index = teamsMembers.findIndex(team => team.id === id);\n    let _teamsMembers = [...teamsMembers];\n    _teamsMembers[index][event.target.name] = event.target.value;\n    setTeamMembers(_teamsMembers);\n  }; //handle inner member data in team\n\n\n  const handleMemberInTeamData = (teamId, memberId, event) => {\n    const teamIndex = teamsMembers.findIndex(team => team.id === teamId);\n    let _teamsMembers = [...teamsMembers];\n    const memberIndex = teamsMembers[teamIndex].members.findIndex(m => m.id === memberId);\n    _teamsMembers[teamIndex].members[memberIndex][event.target.name] = event.target.value;\n    setTeamMembers(_teamsMembers);\n  }; //save teams data\n\n\n  const saveTeamData = () => {\n    console.table(teamsMembers);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dynamic-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Invite new members to your team\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invite-member\",\n      children: [inviteMembers.map(member => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"name\",\n            type: \"text\",\n            onChange: e => handleMemberChange(member.id, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"email\",\n            type: \"text\",\n            onChange: e => handleMemberChange(member.id, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 7\n        }, this), inviteMembers.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeMemberRow(member.id),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addMemberRow,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 7\n        }, this)]\n      }, member.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 6\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-primary\",\n        onClick: handleInvitation,\n        children: [\" \", \"Send invitation\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-section\",\n      children: [teamsMembers.map(team => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row-section__inner\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"team\",\n            children: \"Name of the new team\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"team\",\n            onChange: e => handleTeamData(team.id, e),\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Members\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 8\n          }, this), team.members.map(member => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"name\",\n                type: \"text\",\n                onChange: e => handleMemberInTeamData(team.id, member.id, e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"email\",\n                type: \"text\",\n                onChange: e => handleMemberInTeamData(team.id, member.id, e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addNewMemberInTeam(team.id),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 10\n            }, this)]\n          }, member.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 9\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 7\n        }, this)\n      }, team.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 6\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTeam,\n        children: \"Add new team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 5\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 59\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-primary\",\n        onClick: saveTeamData,\n        children: \"Save team data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 3\n  }, this);\n};\n\n_s(DynamicForm, \"coRRwnErMrmdcilM6Uj7eKZdCYc=\");\n\n_c = DynamicForm;\nexport default DynamicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DynamicForm\");","map":{"version":3,"sources":["D:/Zain/xd/symmisdashboard/src/components/DynamicForm.tsx"],"names":["React","v4","uuidv4","DynamicForm","inviteMembers","setInviteMembers","useState","name","email","id","teamsMembers","setTeamMembers","teamName","members","addMemberRow","_inviteMembers","push","removeMemberRow","filter","member","handleMemberChange","event","index","findIndex","m","target","value","handleInvitation","console","table","handleAddTeam","_teamsMembers","addNewMemberInTeam","team","handleTeamData","handleMemberInTeamData","teamId","memberId","teamIndex","memberIndex","saveTeamData","map","e","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,EAAE,IAAIC,MAAd,QAA2B,MAA3B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,KAAK,CAACM,QAAN,CAAe,CACxD;AACCC,IAAAA,IAAI,EAAE,EADP;AAECC,IAAAA,KAAK,EAAE,EAFR;AAGCC,IAAAA,EAAE,EAAEP,MAAM;AAHX,GADwD,CAAf,CAA1C;AAQA,QAAM,CAACQ,YAAD,EAAeC,cAAf,IAAiCX,KAAK,CAACM,QAAN,CAAe,CACrD;AACCM,IAAAA,QAAQ,EAAE,EADX;AAECH,IAAAA,EAAE,EAAEP,MAAM,EAFX;AAGCW,IAAAA,OAAO,EAAE,CACR;AACCN,MAAAA,IAAI,EAAE,EADP;AAECC,MAAAA,KAAK,EAAE,EAFR;AAGCC,MAAAA,EAAE,EAAEP,MAAM;AAHX,KADQ;AAHV,GADqD,CAAf,CAAvC,CATyB,CAuBzB;;AACA,QAAMY,YAAY,GAAG,MAAM;AAC1B;AAEA,QAAIC,cAAc,GAAG,CAAC,GAAGX,aAAJ,CAArB;;AACAW,IAAAA,cAAc,CAACC,IAAf,CAAoB;AACnBT,MAAAA,IAAI,EAAE,EADa;AAEnBC,MAAAA,KAAK,EAAE,EAFY;AAGnBC,MAAAA,EAAE,EAAEP,MAAM;AAHS,KAApB;;AAKAG,IAAAA,gBAAgB,CAACU,cAAD,CAAhB;AACA,GAVD,CAxByB,CAoCzB;;;AACA,QAAME,eAAe,GAAIR,EAAD,IAAgB;AACvC;AAEA,QAAIM,cAAc,GAAG,CAAC,GAAGX,aAAJ,CAArB;AACAW,IAAAA,cAAc,GAAGA,cAAc,CAACG,MAAf,CAAuBC,MAAD,IAAYA,MAAM,CAACV,EAAP,KAAcA,EAAhD,CAAjB;AACAJ,IAAAA,gBAAgB,CAACU,cAAD,CAAhB;AACA,GAND,CArCyB,CA6CzB;;;AACA,QAAMK,kBAAkB,GAAG,CAC1BX,EAD0B,EAE1BY,KAF0B,KAGtB;AACJ;AACA,UAAMC,KAAK,GAAGlB,aAAa,CAACmB,SAAd,CAAyBC,CAAD,IAAOA,CAAC,CAACf,EAAF,KAASA,EAAxC,CAAd;AAEA,QAAIM,cAAc,GAAG,CAAC,GAAGX,aAAJ,CAArB;AACAW,IAAAA,cAAc,CAACO,KAAD,CAAd,CAAsBD,KAAK,CAACI,MAAN,CAAalB,IAAnC,IAA2Cc,KAAK,CAACI,MAAN,CAAaC,KAAxD;AACArB,IAAAA,gBAAgB,CAACU,cAAD,CAAhB;AACA,GAVD,CA9CyB,CA0DzB;;;AACA,QAAMY,gBAAgB,GAAG,MAAM;AAC9BC,IAAAA,OAAO,CAACC,KAAR,CAAczB,aAAd;AACA,GAFD,CA3DyB,CA+DzB;;;AACA,QAAM0B,aAAa,GAAG,MAAM;AAC3B,QAAIC,aAAa,GAAG,CAAC,GAAGrB,YAAJ,CAApB;;AACAqB,IAAAA,aAAa,CAACf,IAAd,CAAmB;AAClBJ,MAAAA,QAAQ,EAAE,EADQ;AAElBH,MAAAA,EAAE,EAAEP,MAAM,EAFQ;AAGlBW,MAAAA,OAAO,EAAE,CACR;AACCN,QAAAA,IAAI,EAAE,EADP;AAECC,QAAAA,KAAK,EAAE,EAFR;AAGCC,QAAAA,EAAE,EAAEP,MAAM;AAHX,OADQ;AAHS,KAAnB;;AAWAS,IAAAA,cAAc,CAACoB,aAAD,CAAd;AACA,GAdD,CAhEyB,CAgFzB;;;AACA,QAAMC,kBAAkB,GAAIvB,EAAD,IAAgB;AAC1C,UAAMa,KAAK,GAAGZ,YAAY,CAACa,SAAb,CAAwBU,IAAD,IAAUA,IAAI,CAACxB,EAAL,KAAYA,EAA7C,CAAd;AACA,QAAIsB,aAAa,GAAG,CAAC,GAAGrB,YAAJ,CAApB;;AACAqB,IAAAA,aAAa,CAACT,KAAD,CAAb,CAAqBT,OAArB,CAA6BG,IAA7B,CAAkC;AACjCT,MAAAA,IAAI,EAAE,EAD2B;AAEjCC,MAAAA,KAAK,EAAE,EAF0B;AAGjCC,MAAAA,EAAE,EAAEP,MAAM;AAHuB,KAAlC;;AAKAS,IAAAA,cAAc,CAACoB,aAAD,CAAd;AACA,GATD,CAjFyB,CA4FzB;;;AACA,QAAMG,cAAc,GAAG,CACtBzB,EADsB,EAEtBY,KAFsB,KAGlB;AACJ,UAAMC,KAAK,GAAGZ,YAAY,CAACa,SAAb,CAAwBU,IAAD,IAAUA,IAAI,CAACxB,EAAL,KAAYA,EAA7C,CAAd;AAEA,QAAIsB,aAAa,GAAG,CAAC,GAAGrB,YAAJ,CAApB;AAEAqB,IAAAA,aAAa,CAACT,KAAD,CAAb,CAAqBD,KAAK,CAACI,MAAN,CAAalB,IAAlC,IAA0Cc,KAAK,CAACI,MAAN,CAAaC,KAAvD;AACAf,IAAAA,cAAc,CAACoB,aAAD,CAAd;AACA,GAVD,CA7FyB,CAwGzB;;;AACA,QAAMI,sBAAsB,GAAG,CAC9BC,MAD8B,EAE9BC,QAF8B,EAG9BhB,KAH8B,KAI1B;AACJ,UAAMiB,SAAS,GAAG5B,YAAY,CAACa,SAAb,CAAwBU,IAAD,IAAUA,IAAI,CAACxB,EAAL,KAAY2B,MAA7C,CAAlB;AACA,QAAIL,aAAa,GAAG,CAAC,GAAGrB,YAAJ,CAApB;AACA,UAAM6B,WAAW,GAAG7B,YAAY,CAAC4B,SAAD,CAAZ,CAAwBzB,OAAxB,CAAgCU,SAAhC,CAClBC,CAAD,IAAOA,CAAC,CAACf,EAAF,KAAS4B,QADG,CAApB;AAGAN,IAAAA,aAAa,CAACO,SAAD,CAAb,CAAyBzB,OAAzB,CAAiC0B,WAAjC,EAA8ClB,KAAK,CAACI,MAAN,CAAalB,IAA3D,IACCc,KAAK,CAACI,MAAN,CAAaC,KADd;AAEAf,IAAAA,cAAc,CAACoB,aAAD,CAAd;AACA,GAbD,CAzGyB,CAwHzB;;;AACA,QAAMS,YAAY,GAAG,MAAM;AAC1BZ,IAAAA,OAAO,CAACC,KAAR,CAAcnB,YAAd;AACA,GAFD;;AAIA,sBACC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAGC;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,iBACEN,aAAa,CAACqC,GAAd,CAAmBtB,MAAD,iBAClB;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACC;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACC;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AACC,YAAA,IAAI,EAAC,MADN;AAEC,YAAA,IAAI,EAAC,MAFN;AAGC,YAAA,QAAQ,EAAGuB,CAAD,IAAOtB,kBAAkB,CAACD,MAAM,CAACV,EAAR,EAAYiC,CAAZ;AAHpC;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eASC;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACC;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AACC,YAAA,IAAI,EAAC,OADN;AAEC,YAAA,IAAI,EAAC,MAFN;AAGC,YAAA,QAAQ,EAAGA,CAAD,IAAOtB,kBAAkB,CAACD,MAAM,CAACV,EAAR,EAAYiC,CAAZ;AAHpC;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,gBATD,EAiBEtC,aAAa,CAACuC,MAAd,GAAuB,CAAvB,iBACA;AAAQ,UAAA,OAAO,EAAE,MAAM1B,eAAe,CAACE,MAAM,CAACV,EAAR,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBF,eAqBC;AAAQ,UAAA,OAAO,EAAEK,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBD;AAAA,SAA+BK,MAAM,CAACV,EAAtC;AAAA;AAAA;AAAA;AAAA,cADA,CADF,eA2BC;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAEkB,gBAAzC;AAAA,mBACE,GADF;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BD;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD,eAsCC;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,iBACEjB,YAAY,CAAC+B,GAAb,CAAkBR,IAAD,iBACjB;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACC;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACC;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AACC,YAAA,IAAI,EAAC,MADN;AAEC,YAAA,QAAQ,EAAGS,CAAD,IAAOR,cAAc,CAACD,IAAI,CAACxB,EAAN,EAAUiC,CAAV,CAFhC;AAGC,YAAA,IAAI,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,kBAFD,eAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPD,EAQET,IAAI,CAACpB,OAAL,CAAa4B,GAAb,CAAkBtB,MAAD,iBACjB;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACC;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,sCACC;AAAO,gBAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,eAEC;AACC,gBAAA,IAAI,EAAC,MADN;AAEC,gBAAA,IAAI,EAAC,MAFN;AAGC,gBAAA,QAAQ,EAAGuB,CAAD,IACTP,sBAAsB,CAACF,IAAI,CAACxB,EAAN,EAAUU,MAAM,CAACV,EAAjB,EAAqBiC,CAArB;AAJxB;AAAA;AAAA;AAAA;AAAA,sBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,eAWC;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,sCACC;AAAO,gBAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,eAEC;AACC,gBAAA,IAAI,EAAC,OADN;AAEC,gBAAA,IAAI,EAAC,MAFN;AAGC,gBAAA,QAAQ,EAAGA,CAAD,IACTP,sBAAsB,CAACF,IAAI,CAACxB,EAAN,EAAUU,MAAM,CAACV,EAAjB,EAAqBiC,CAArB;AAJxB;AAAA;AAAA;AAAA;AAAA,sBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXD,eAqBC;AAAQ,cAAA,OAAO,EAAE,MAAMV,kBAAkB,CAACC,IAAI,CAACxB,EAAN,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBArBD;AAAA,aAA+BU,MAAM,CAACV,EAAtC;AAAA;AAAA;AAAA;AAAA,kBADA,CARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADD,SAAyCwB,IAAI,CAACxB,EAA9C;AAAA;AAAA;AAAA;AAAA,cADA,CADF,eAuCC;AAAQ,QAAA,OAAO,EAAEqB,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvCD,oBAuCuD;AAAA;AAAA;AAAA;AAAA,cAvCvD,eAwCC;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAEU,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxCD;AAAA;AAAA;AAAA;AAAA;AAAA,YAtCD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAqFA,CAlND;;GAAMrC,W;;KAAAA,W;AAoNN,eAAeA,WAAf","sourcesContent":["import React from \"react\"\r\nimport {v4 as uuidv4} from \"uuid\"\r\n\r\nconst DynamicForm = () => {\r\n\tconst [inviteMembers, setInviteMembers] = React.useState([\r\n\t\t{\r\n\t\t\tname: \"\",\r\n\t\t\temail: \"\",\r\n\t\t\tid: uuidv4(),\r\n\t\t},\r\n\t])\r\n\r\n\tconst [teamsMembers, setTeamMembers] = React.useState([\r\n\t\t{\r\n\t\t\tteamName: \"\",\r\n\t\t\tid: uuidv4(),\r\n\t\t\tmembers: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"\",\r\n\t\t\t\t\temail: \"\",\r\n\t\t\t\t\tid: uuidv4(),\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t])\r\n\r\n\t//add new form field for adding member\r\n\tconst addMemberRow = () => {\r\n\t\t//Todo generate random id\r\n\r\n\t\tlet _inviteMembers = [...inviteMembers]\r\n\t\t_inviteMembers.push({\r\n\t\t\tname: \"\",\r\n\t\t\temail: \"\",\r\n\t\t\tid: uuidv4(),\r\n\t\t})\r\n\t\tsetInviteMembers(_inviteMembers)\r\n\t}\r\n\r\n\t//remove form field for adding member\r\n\tconst removeMemberRow = (id: string) => {\r\n\t\t//Todo generate random id\r\n\r\n\t\tlet _inviteMembers = [...inviteMembers]\r\n\t\t_inviteMembers = _inviteMembers.filter((member) => member.id !== id)\r\n\t\tsetInviteMembers(_inviteMembers)\r\n\t}\r\n\r\n\t//handle email row change\r\n\tconst handleMemberChange = (\r\n\t\tid: string,\r\n\t\tevent: React.ChangeEvent<HTMLInputElement>,\r\n\t) => {\r\n\t\t//find the index to be changed\r\n\t\tconst index = inviteMembers.findIndex((m) => m.id === id)\r\n\r\n\t\tlet _inviteMembers = [...inviteMembers] as any\r\n\t\t_inviteMembers[index][event.target.name] = event.target.value\r\n\t\tsetInviteMembers(_inviteMembers)\r\n\t}\r\n\r\n\t//handle invitation for members\r\n\tconst handleInvitation = () => {\r\n\t\tconsole.table(inviteMembers)\r\n\t}\r\n\r\n\t//handle add team\r\n\tconst handleAddTeam = () => {\r\n\t\tlet _teamsMembers = [...teamsMembers]\r\n\t\t_teamsMembers.push({\r\n\t\t\tteamName: \"\",\r\n\t\t\tid: uuidv4(),\r\n\t\t\tmembers: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"\",\r\n\t\t\t\t\temail: \"\",\r\n\t\t\t\t\tid: uuidv4(),\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t})\r\n\t\tsetTeamMembers(_teamsMembers)\r\n\t}\r\n\r\n\t//handle new memeber inside selected team\r\n\tconst addNewMemberInTeam = (id: string) => {\r\n\t\tconst index = teamsMembers.findIndex((team) => team.id === id)\r\n\t\tlet _teamsMembers = [...teamsMembers]\r\n\t\t_teamsMembers[index].members.push({\r\n\t\t\tname: \"\",\r\n\t\t\temail: \"\",\r\n\t\t\tid: uuidv4(),\r\n\t\t})\r\n\t\tsetTeamMembers(_teamsMembers)\r\n\t}\r\n\r\n\t//handle team data\r\n\tconst handleTeamData = (\r\n\t\tid: string,\r\n\t\tevent: React.ChangeEvent<HTMLInputElement>,\r\n\t) => {\r\n\t\tconst index = teamsMembers.findIndex((team) => team.id === id)\r\n\r\n\t\tlet _teamsMembers = [...teamsMembers] as any\r\n\r\n\t\t_teamsMembers[index][event.target.name] = event.target.value\r\n\t\tsetTeamMembers(_teamsMembers)\r\n\t}\r\n\t//handle inner member data in team\r\n\tconst handleMemberInTeamData = (\r\n\t\tteamId: string,\r\n\t\tmemberId: string,\r\n\t\tevent: React.ChangeEvent<HTMLInputElement>,\r\n\t) => {\r\n\t\tconst teamIndex = teamsMembers.findIndex((team) => team.id === teamId)\r\n\t\tlet _teamsMembers = [...teamsMembers] as any\r\n\t\tconst memberIndex = teamsMembers[teamIndex].members.findIndex(\r\n\t\t\t(m) => m.id === memberId,\r\n\t\t)\r\n\t\t_teamsMembers[teamIndex].members[memberIndex][event.target.name] =\r\n\t\t\tevent.target.value\r\n\t\tsetTeamMembers(_teamsMembers)\r\n\t}\r\n\r\n\t//save teams data\r\n\tconst saveTeamData = () => {\r\n\t\tconsole.table(teamsMembers)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"dynamic-form\">\r\n\t\t\t<h2>Invite new members to your team</h2>\r\n\r\n\t\t\t<div className=\"invite-member\">\r\n\t\t\t\t{inviteMembers.map((member) => (\r\n\t\t\t\t\t<div className=\"form-row\" key={member.id}>\r\n\t\t\t\t\t\t<div className=\"input-group\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"name\">Name</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={(e) => handleMemberChange(member.id, e)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"input-group\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"email\">Email</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonChange={(e) => handleMemberChange(member.id, e)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{inviteMembers.length > 1 && (\r\n\t\t\t\t\t\t\t<button onClick={() => removeMemberRow(member.id)}>-</button>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<button onClick={addMemberRow}>+</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\r\n\t\t\t\t<button className=\"btn-primary\" onClick={handleInvitation}>\r\n\t\t\t\t\t{\" \"}\r\n\t\t\t\t\tSend invitation\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/** 2nd level dynamic example */}\r\n\r\n\t\t\t<div className=\"row-section\">\r\n\t\t\t\t{teamsMembers.map((team) => (\r\n\t\t\t\t\t<div className=\"row-section__inner\" key={team.id}>\r\n\t\t\t\t\t\t<div className=\"input-group\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"team\">Name of the new team</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tname=\"team\"\r\n\t\t\t\t\t\t\t\tonChange={(e) => handleTeamData(team.id, e)}\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<h3>Members</h3>\r\n\t\t\t\t\t\t\t{team.members.map((member) => (\r\n\t\t\t\t\t\t\t\t<div className=\"form-row\" key={member.id}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"input-group\">\r\n\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"name\">Name</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleMemberInTeamData(team.id, member.id, e)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"input-group\">\r\n\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"email\">Email</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleMemberInTeamData(team.id, member.id, e)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<button onClick={() => addNewMemberInTeam(team.id)}>+</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t\t<button onClick={handleAddTeam}>Add new team</button> <br />\r\n\t\t\t\t<button className=\"btn-primary\" onClick={saveTeamData}>\r\n\t\t\t\t\tSave team data\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DynamicForm\r\n"]},"metadata":{},"sourceType":"module"}